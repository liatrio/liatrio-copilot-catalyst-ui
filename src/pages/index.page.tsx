import type { GetServerSideProps, NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import Layout from "../components/Layout/Layout";
import LoadingMessage from "../components/LoadingMessage/LoadingMessage";
import Table from "../components/Table/Table";
import ShareForm from "../components/ShareForm/ShareForm";
import styles from "./index.module.scss";
import { performDelete, postFormData } from "../utils/api";

export interface Blog {
  id?: string;
  title: string;
  firstName: string;
  link: URL;
  imageUrl?: URL;
  dateAsDate?: Date;
}

export interface Props {
  initialBlogList: Blog[];
  enableImageURL: boolean;
}

const Home: NextPage<Props> = ({ initialBlogList, enableImageURL }) => {
  let blogTable: JSX.Element;

  const [blogList, setBlogList] = useState(initialBlogList);

  const handleDeleteBlog: Function = (id: string) => {
    performDelete(id);
    setBlogList(blogList.filter((blog) => blog.id !== id));
  };

  const handleSubmit: Function = async (event: any, newBlog: Blog) => {
    event.preventDefault();
    try {
      await postFormData(newBlog);
      const updatedBlogListResponse = await fetch(
        process.env["DKS_API_BASE_URL"] + "/posts"
      );
      const updatedBlogList: Blog[] = await updatedBlogListResponse.json();
      setBlogList(updatedBlogList);
    } catch (error) {
      console.error("Error creating blog:", error);
    }
  };

  if (blogList) {
    blogTable = (
      <Table
        blogList={blogList}
        handleDelete={handleDeleteBlog}
        enableImageURL={enableImageURL}
      />
    );
  } else {
    blogTable = <LoadingMessage>(404) Blog data not found</LoadingMessage>;
  }

  return (
    <Layout title="DevOps Knowledge Share">
      <div>
        <Head>
          <title>DKS</title>
          <meta name="description" content="Generated by Liatrio" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <div className={styles.bannerWrapper}>
            <div className={styles.mainBanner}>
              <h2>DevOps Community Shared Posts</h2>
              <p>
                Let&apos;s grow this DevOps Community strong by sharing your
                favorite article or blog post on DevOps culture, tools, platform
                and more!
              </p>
            </div>
          </div>
          <div className={styles.shareForm}>
            <ShareForm
              enableImageURL={enableImageURL}
              handleSubmit={handleSubmit}
            />
          </div>
          <div className={styles.bloglist}>{blogTable}</div>
        </main>
      </div>
    </Layout>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ res }) => {
  try {
    const res = await fetch(process.env["DKS_API_BASE_URL"] + "/posts");
    const initialBlogList: Blog[] = await res.json();

    return {
      props: {
        initialBlogList,
        enableImageURL: process.env["ENABLE_IMAGE_URL"] || false,
      },
    };
  } catch {
    res.statusCode = 404;
    return {
      props: { enableImageURL: process.env["ENABLE_IMAGE_URL"] || false },
    };
  }
};

export default Home;
